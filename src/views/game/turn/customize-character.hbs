{{#block "title"}}Personage aanpassen{{/block}}

{{#block "headScripts"}}
<script src="/js/turn.js"></script>
<script>
	window.turn.thisStep = 0;
	window.turn.ensureValidStep();
</script>
{{/block}}

<div id="container-div" class="container-compact d-none">
	<h1>Personage aanpassen</h1>

	<div class="field">
		<label for="first-name-input" class="form-label">Voornaam:</label>
		<input id="first-name-input" class="form-control" type="text">
	</div>
	
	<div class="field">
		<label for="last-name-input" class="form-label">Achternaam:</label>
		<input id="last-name-input" class="form-control" type="text">
	</div>
	
	<p class="error" id="name-error-p"></p>
	
	<div class="field">
		<label for="job-preference-1-select" class="form-label">Jobvoorkeur (★★★):</label>
		<select id="job-preference-1-select" class="form-select"></select>
	</div>
	
	<div class="field">
		<label for="job-preference-2-select" class="form-label">Jobvoorkeur (★★):</label>
		<select id="job-preference-2-select" class="form-select"></select>
	</div>
	
	<div class="field">
		<label for="job-preference-3-select-select" class="form-label">Jobvoorkeur (★):</label>
		<select id="job-preference-3-select" class="form-select"></select>
	</div>
	
	<div class="field">
		<label for="recreation-preference-select" class="form-label">Ontspanningsvoorkeur (★★★):</label>
		<select id="recreation-preference-select" class="form-select"></select>
	</div>	
</div>

<script>
window.turn.getFields = function () {
	return {
		firstName: document.getElementById('first-name-input'),
		lastName: document.getElementById('last-name-input'),
		nameError: document.getElementById('name-error-p'),
		jobPreference1: document.getElementById('job-preference-1-select'),
		jobPreference2: document.getElementById('job-preference-2-select'),
		jobPreference3: document.getElementById('job-preference-3-select'),
		recreationPreference: document.getElementById('recreation-preference-select')
	};
};

window.turn.loadFields = function() {
	const allJobs = JSON.parse(localStorage.getItem(`turn.allJobs`));
	const allRecreations = JSON.parse(localStorage.getItem(`turn.allRecreations`));
	const fields = window.turn.getFields();
	
	window.turn.stepFields.firstName: document.getElementById('first-name-input'),
	window.turn.stepFields.lastName: document.getElementById('last-name-input'),
	window.turn.stepFields.nameError: document.getElementById('name-error-p'),
	window.turn.stepFields.jobPreference1: document.getElementById('job-preference-1-select'),
	window.turn.stepFields.jobPreference2: document.getElementById('job-preference-2-select'),
	window.turn.stepFields.jobPreference3: document.getElementById('job-preference-3-select'),
	window.turn.stepFields.recreationPreference: document.getElementById('recreation-preference-select')
	
	window.turn.populateSelect(fields.jobPreference1, allJobs);
	window.turn.populateSelect(fields.jobPreference2, allJobs);
	window.turn.populateSelect(fields.jobPreference3, allJobs);
	window.turn.populateSelect(fields.recreationPreference, allRecreations);
	
	fields.firstName.value = window.turn.stepData.firstName;
	fields.lastName.value = window.turn.stepData.lastName;
	fields.nameError.textContent = window.turn.stepData.nameError;
	fields.jobPreference1.value = window.turn.stepData.jobPreference1;
	fields.jobPreference2.value = window.turn.stepData.jobPreference2;	
	fields.jobPreference3.value = window.turn.stepData.jobPreference3;
	fields.recreationPreference.value = window.turn.stepData.recreationPreference;
	
	fields.firstName.addEventListener('input', handleFirstNameInput);
	fields.lastName.addEventListener('input', handleLastNameInput);
	fields.jobPreference1.addEventListener('change', handleJobPreferenceChange);
	fields.jobPreference2.addEventListener('change', handleJobPreferenceChange);
	fields.jobPreference3.addEventListener('change', handleJobPreferenceChange);
}

window.turn.saveFields = function() {
	const fields = window.turn.getFields();
	
	window.turn.stepData.firstName = fields.firstName.value;
	window.turn.stepData.lastName = fields.lastName.value;
	window.turn.stepData.nameError = fields.nameError.textContent;
	window.turn.stepData.jobPreference1 = fields.jobPreference1.value;
	window.turn.stepData.jobPreference2 = fields.jobPreference2.value;	
	window.turn.stepData.jobPreference3 = fields.jobPreference3.value;
	window.turn.stepData.recreationPreference = fields.recreationPreference.value;
}

//--- Event handlers ------------------------------------------------------------------------//
function handleFirstNameInput() {
	const fields = window.turn.getFields();
	
	fields.nameError.textContent = '';
	validateName(fields.firstName);
}

function handleLastNameInput() {
	const fields = window.turn.getFields();
	
	fields.nameError.textContent = '';
	validateName(fields.lastName);
}

function handleJobPreferenceChange() {
	const fields = window.turn.getFields();
	const selects = [fields.jobPreference1, 
					 fields.jobPreference2, 
					 fields.jobPreference3];
	const selectedValues = selects.map(select => select.value);
	
	selects.forEach((select, index) => {
		const otherSelectedValues = selectedValues.filter((_, i) => i !== index);
		
		Array.from(select.options).forEach(option => {
			option.disabled = otherSelectedValues.includes(option.value);
		});
	});
}

//--- Helpers -------------------------------------------------------------------------------//
function validateName(nameInput) {
	const name = nameInput.value;
	const minLength = 2;
	const maxLength = 32;
	const regex = /^[A-Za-zÀ-ÖØ-öø-ÿĀ-ž]+(?:[ '-][A-Za-zÀ-ÖØ-öø-ÿĀ-ž]+)*$/;

	if (name.length < minLength) {
		nameInput.setCustomValidity(`Minimaal ${minLength} tekens vereist.`);
	} else if (name.length > maxLength) {
		nameInput.setCustomValidity(`Maximaal ${maxLength} tekens toegestaan.`);
	} else if (name !== name.trim()) {
		nameInput.setCustomValidity(
			'Spaties aan het begin of het einde zijn niet toegestaan.');
	} else if (!regex.test(name)) {
		nameInput.setCustomValidity(
			'Alleen letters, spatie, apostrof en koppelteken zijn toegestaan.');
	} else {
		nameInput.setCustomValidity('');
	}
	
	nameInput.reportValidity();
}

document.addEventListener('DOMContentLoaded', () => {
	window.turn.initializeStep();
});
</script>