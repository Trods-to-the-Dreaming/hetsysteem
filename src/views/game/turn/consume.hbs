{{#block "title"}}Consumeren{{/block}}

{{#block "headScripts"}}
<script src="/js/turn.js"></script>
<script>
	ensureBeginTurn();
	
	window.stepData = {
		steps: JSON.parse(localStorage.getItem('steps')),
		firstStep: parseInt(localStorage.getItem('firstStep'), 10),
		lastStep: parseInt(localStorage.getItem('lastStep'), 10),
		currentStep: parseInt(localStorage.getItem('currentStep'), 10),
		thisStep: 7
	};
	
	ensureValidStep(window.stepData);
</script>
{{/block}}

<div id="container-div" class="container-compact d-none">
	<h1>Consumeren</h1>
	
	<button id="finish-button" class="button-1">Voltooien</button>
	<button id="next-button" class="button-1">Volgende ‚Üí</button>
	<button id="back-button" class="button-1">‚Üê Vorige</button>
	
	<a class="button-2" href="/game">‚Üë Spelmenu</a>
	
	<!--div id="confirmed-section" {{#unless has_confirmed}}class="d-none"{{/unless}}>
		<p class="success">Uw voedsel- en medische zorgconsumptie is bevestigd.</p>
		
		<button id="edit-button" type="button" class="button-1">Wijzigen</button>
	</div>
	
	<div id="overview-section" {{#if has_confirmed}}class="d-none"{{/if}}>
		<form id="survive-form" method="POST" action="/game/actions/survive">
			<h2>üçé Voedsel</h2>
			{{#if (gt food_available 0)}}
				<ul class="list-compact">
					<li class="list-item-justify">
						<span>Beschikbaar:</span>
						<span class="list-fake-select">{{food_available}}</span>
					</li>
					<li class="list-item-justify">
						<span>Opeten:</span>
						<select id="food-consumed" class="list-select" name="foodConsumed">
							{{#range 0 food_selectable}}
								<option value="{{this}}" {{#if (eq this ../food_default)}}selected{{/if}}>{{this}}</option>
							{{/range}}
						</select>
					</li>
				</ul>
			{{else}}
				<p>Je hebt geen voedsel.</p>
			{{/if}}
			
			<p id="warning-food" class="warning">{{warning_food}}</p>
			
			<h2>üíä Medische zorg</h2>
			{{#if (gt medical_care_available 0)}}
				<ul class="list-compact">
					<li class="list-item-justify">
						<span>Beschikbaar:</span>
						<span class="list-fake-select">{{medical_care_available}}</span>
					</li>
					<li class="list-item-justify">
						<span>Benutten:</span>
						<select id="medical-care-consumed" class="list-select" name="medicalCareConsumed">
							{{#range 0 medical_care_selectable}}
								<option value="{{this}}" {{#if (eq this ../medical_care_default)}}selected{{/if}}>{{this}}</option>
							{{/range}}
						</select>
					</li>
				</ul>
			{{else}}
				<p>Je hebt geen toegang tot medische zorg.</p>
			{{/if}}
			
			<p id="warning-medical-care" class="warning">{{warning_medical_care}}</p>
			
			<button class="button-1" type="submit">Bevestigen</button>
		</form>
	</div>

	<a class="button-back" href="/game/actions">‚Üê Acties</a-->
</div>

<script>
function clickNext() {
	goToNextStep(stepData);
}

function clickBack() {
	goToPreviousStep(stepData);
}

document.addEventListener('DOMContentLoaded', () => {
	const containerDiv = document.getElementById('container-div');
	const finishButton = document.getElementById('finish-button');
	const nextButton = document.getElementById('next-button');
	const backButton = document.getElementById('back-button');
	
	const isFirstStep = (window.stepData.thisStep === window.stepData.firstStep);
	const isLastStep = (window.stepData.thisStep === window.stepData.lastStep);
	
	if (isLastStep) {
		nextButton.classList.add('d-none');
	} else {
		finishButton.classList.add('d-none');
	}
	if (isFirstStep) {
		backButton.classList.add('d-none');
	}
	
	nextButton.addEventListener('click', clickNext);
	backButton.addEventListener('click', clickBack);
	
	containerDiv.classList.remove('d-none');
});
</script>

<!--script>
	// Elements
	const confirmedSection = document.getElementById('confirmed-section');
	const editButton = document.getElementById('edit-button');
	const overviewSection = document.getElementById('overview-section');
	const foodConsumed = document.getElementById('food-consumed');
	const warningFood = document.getElementById('warning-food');
	const medicalCareConsumed = document.getElementById('medical-care-consumed');
	const warningMedicalCare = document.getElementById('warning-medical-care');
	
	// Variables
	const foodNeeded = {{food_needed}};
	const foodSelectable = {{food_selectable}};
	const medicalCareNeeded = {{medical_care_needed}};
	const medicalCareSelectable = {{medical_care_selectable}};
	
	// Event listeners
	editButton.addEventListener('click', clickEdit);
	foodConsumed.addEventListener('change', checkFoodWarning);
	medicalCareConsumed.addEventListener('change', checkMedicalCareWarning);
	
	// Executed when the DOM content is loaded
	checkFoodWarning();
	checkMedicalCareWarning();
	
	// Event handlers
	function clickEdit() {
		confirmedSection.classList.add('d-none');
		overviewSection.classList.remove('d-none');
	};
	//----------------------------------------
	function checkFoodWarning() {
		const selectedValue = Number(foodConsumed.value);
		if (selectedValue < foodNeeded && foodSelectable >= foodNeeded) {
			warningFood.textContent = '‚ö†Ô∏è Je eet minder dan nodig, terwijl je genoeg voedsel hebt!';
		} else {
			warningFood.textContent = '';
		}
	}
	//----------------------------------------
	function checkMedicalCareWarning() {
		const selectedValue = Number(medicalCareConsumed.value);
		if (selectedValue < medicalCareNeeded && medicalCareSelectable >= medicalCareNeeded) {
			warningMedicalCare.textContent = '‚ö†Ô∏è Je benut minder medische zorg dan nodig, terwijl je toegang tot genoeg medische zorg hebt!';
		} else {
			warningMedicalCare.textContent = '';
		}
	}
</script-->