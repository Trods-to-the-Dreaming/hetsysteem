Ik ben een spel aan het maken met Node JS en MySQL. Iedere dag kan een speler zijn acties voor die beurt ingeven via enkele stappen. Voor iedere stap heb ik een hbs-pagina. De volgorde van de stappen is cruciaal, want de mogelijke acties in stap i hangen af van wat de speler heeft ingegeven in stap i-1. Soms zijn bepaalde stappen niet van toepassing en die moeten dan worden overgeslagen.

In het hoofdmenu op '/game' staat een knop 'Beurt spelen' die '/game/turn/begin' oproept. Om de communicatie met de server te beperken geef ik alle data van de server mee op '/game/turn/begin', die dan automatisch doorverwijst (window.location.replace) naar de eerste relevante stap. Iedere stap verzamelt de ingegeven acties in localStorage. De laatste relevante stap heeft een knop 'Voltooien' die 'game/turn/finish' oproept. Die haalt alle ingegeven acties uit localStorage en stuurt ze naar de server, die alles controleert en dan in MySQL steekt. Iedere nacht om 2u00 worden de acties van alle spelers voor die beurt verwerkt.

Iedere stap heeft een knop 'Volgende' (behalve de laatste relevante stap) en een knop 'Vorige' (behalve de eerste relevante stap). Als een speler naar de vorige relevante stap gaat, dan moeten alle form elements disabled zijn en moet er een knop 'Wijzigen' staan. Als de speler op 'Wijzigen' klikt, dan worden alle volgende stappen gewist, want het is dan niet zeker dat die acties nog consistent zullen zijn met de wijzigingen die de speler gaat doen.

Ik heb turn.js aangemaakt (is nog niet goed):
window.turn = window.turn || {};
window.turn.begin = localStorage.getItem('begin');
window.turn.steps = JSON.parse(localStorage.getItem('steps'));
window.turn.firstStep = parseInt(localStorage.getItem('firstStep'), 10);
window.turn.lastStep = parseInt(localStorage.getItem('lastStep'), 10);
window.turn.currentStep = parseInt(localStorage.getItem('currentStep'), 10);

//--- Ensure begin ------------------------------------------------------------------------------//
window.turn.ensureBegin = function() {
	if (window.turn.begin === null) {
		window.location.replace('/game/turn/begin');
	}
}

//--- Ensure valid step -------------------------------------------------------------------------//
window.turn.ensureValidStep = function() {
	if (window.turn.thisStep === window.turn.currentStep) {
		// This step is the current step --> show
		return; 
	}
	
	if (window.turn.thisStep > window.turn.currentStep) {
		// This step is a future step --> prevent
		window.location.replace(window.turn.steps[window.turn.currentStep].url);
		return; 
	}
	
	// This step is a previous step --> show if applicable
	let previousStep = window.turnthisStep;
	while (previousStep < window.turncurrentStep &&
		   !window.turn.steps[previousStep].show) {
		previousStep++;
	}
	window.location.replace(window.turn.steps[previousStep].url);
}

//--- Init navigation ---------------------------------------------------------------------------//
window.turn.initNavigation = function() {
	const containerDiv = document.getElementById('container-div');
	
	const formElements = Array.from(
		containerDiv.querySelectorAll('input, select')
    );
	
	const nextButton = document.getElementById('next-button');
	const backButton = document.getElementById('back-button');
	const finishButton = document.getElementById('finish-button');
	const cancelButton = document.getElementById('cancel-button');
	const editButton = document.getElementById('edit-button');
	
	const isFirstStep = (window.turn.thisStep === window.turn.firstStep);
	const isLastStep = (window.turn.thisStep === window.turn.lastStep);
	
	if (window.turn.submitted) {
		formElements.forEach(el => el.disabled = true);
		
	if (isFirstStep) {
		backButton.classList.add('d-none');
	}
	if (isLastStep) {
		nextButton.classList.add('d-none');
	} else {
		finishButton.classList.add('d-none');
	}

	nextButton.addEventListener('click', window.turn.goToNextStep);
	backButton.addEventListener('click', window.turn.goToPreviousStep);
	finishButton.addEventListener('click', window.turn.finishTurn);
	cancelButton.addEventListener('click', window.turn.cancelTurn);
	editButton.addEventListener('click', window.turn.editTurn);
	
	containerDiv.classList.remove('d-none');
};

//--- Go to next step ---------------------------------------------------------------------------//
window.turn.goToNextStep = function() {
	let nextStep = window.turn.currentStep + 1;
	
	while (nextStep <= window.turn.lastStep &&
		   !window.turn.steps[nextStep].show) {
		nextStep++;
	}
	
	if (nextStep <= window.turn.lastStep) {
		localStorage.setItem('currentStep', nextStep);
		window.location.assign(window.turn.steps[nextStep].url);
	}
}

//--- Go to previous step -----------------------------------------------------------------------//
window.turn.goToPreviousStep = function() {
	let previousStep = window.turn.currentStep - 1;
	
	while (previousStep >= window.turn.firstStep &&
		   !window.turn.steps[previousStep].show) {
		previousStep--;
	}
	
	if (previousStep >= window.turn.firstStep) {
		localStorage.setItem('currentStep', previousStep);
		window.location.assign(window.turn.steps[previousStep].url);
	}
}

//--- Finish turn -------------------------------------------------------------------------------//
window.turn.finishTurn = function() {
	window.location.assign('/game/turn/finish');
}

//--- Cancel turn -------------------------------------------------------------------------------//
window.turn.cancelTurn = function() {
	window.location.assign('/game');
}

//--- Edit turn ---------------------------------------------------------------------------------//
window.turn.editTurn = function() {
	//formElements.forEach(el => el.disabled = false);
}

en die roep ik op in iedere stappagina:
{{#block "headScripts"}}
<script src="/js/turn.js"></script>
<script>
	ensureBeginTurn();
	window.turn.thisStep = 0; // iedere stappagina heeft zijn volgnummer
	ensureValidStep();
</script>
{{/block}}

<!-- HTML elementen -->

<script>
document.addEventListener('DOMContentLoaded', () => {
	 window.turn.initNavigation();
	//...
</script>

Het probleem is dat de browser een back-knop heeft en de vorige stappagina mogelijk uit de cache haalt. De ingegeven acties zullen dan wel juist worden weergegeven, denk ik, maar ik vrees dat de form elements dan niet disabled zullen zijn en er geen knop 'Wijzigen' zal staan.